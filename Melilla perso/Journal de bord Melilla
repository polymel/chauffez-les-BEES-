J1 : Choix du projet - établir le Cahier des charges - A qui se destine le projet , pour quelle utilité , avec quelles contraintes. 

Dans un prmeier temps on détermine le but global. Le but est de chauffer une riuche afin de faciliter le developpement de l'essaim. On identifie pour qui nous faisons ce projet; cela va faire varier le 
budge et le délais. Ce porjet va se dérouler sur l'année scolaire, à raison de 4 heures toutes les deux semaines + travail à l'exterieur si besoin. Le budget est de 50 euros par ruche.

On détermine les différnets organes nécessaire : une source d'énergie (ici un panneau solaire+régulateur), une actionneur (ici des resistances qui chauffent,un interrupteur), un automate (ESP32, le comparateur)
et des capteurs (ici les DS18B20, pour mesurer la température de l'huile). On se sert d'une huile pour stocker l'énergie. 

Le but final, l'amélioration est d'utiliser la puissance maximum du système. 




Bête à corne 

OUI



J2 : Tester la tension à vide du panneau solaire : besoin d'une fiche (connecteur RCA) , du panneau solaire et le mettre sous le néon. 
Le jour où il ferra beau faire le montage. 


Utiliser en série un ampère mètre et en parrallèle un voltmètre. Utiliser une résistance "réglable". 

Utiliser lush pour faire les schémas 
1. Tester le panneau solaire: on remplace le panneau solaire par un génerateur de thevenin 

Première ébauche de la PCBA :
BOM: 

-ESP32, alimenté en 3,3 V 
-Régulateur de tension (un seule composant) 
-Groupe comparateur (diode zener pour fixer une tension de seuil , une résistance pour mettre une charge à la diode, un comparateur) 
-un interrupteur piloté par l'ESP32 
- X résistances

J'ai ajouté à l'aide de Simon Git dans VS Code. 


MPN et réferences du materiel : 

Je me suis renseignée egalement sur le process du radiateur à inertie fluide. 

C'est le principe sur lequel on base le chauffage des résistances. 

Pour le liquide on peut choisir : De l’eau glycolée, De l’huile, minérale ou végétale. 
On appelle ces fluides :fluide caloporteur ou thermo-conducteur


résistance, qui transforme le courant en chaleur ;

Est ce que les parois métalliques des résistances conduisent ? comme les bains d'huile 

- : lourd, dur de réguler à cause du temps de latence 
![alt text](image.png)


Trigger de Shmitt 
Une des application du Trigger de Shmitt est : réaliser des circuits de contrôle avec hystérésis : thermostats, interrupteurs crépusculaires, maintien du niveau dans une cuve. C'est donc pile ce que l'on veut.


Comment définir les seuils inférieur et superieur ? 
Tension min = tension à partir de la quelle le sytème de fonctionnerait ples. 3,3 V? 
Tension max = tension à partir de laquelle la température est dangereuse pour les abeilles


Quelle est la température dangereuse pour l'essaim ? 

pas de régulateur de Tension sur lush project

Hystérésis

J3
-------12/11-------

essai 

Le professeur nous donne des articles à lire :

https://www.morningstarcorp.com/faq/what-are-the-different-types-of-solar-charge-controllers/#:~:text=All%20things%20being%20equal%2C%20MPPT,boost%20is%20not%20as%20significant.

https://www.ti.com/lit/ug/tidudj2/tidudj2.pdf?ts=1728344845244&ref_url=https%253A%252F%252Fwww.google.com%252F

https://www.ti.com/lit/an/slyt478/slyt478.pdf?ts=1728361811934

https://www.st.com/en/power-management/mppt-dc-dc-converters.html



Il nous donne aussi un INA 219. il nous permet de mesurer la tension et l'intensité. Il dessine de montage : un premier montage pour de test pour faire les mesures T/I avec l'INA 219 
et un autre "final" où l'INA sera intégré dans la carte 

*voir photo  "Montage avec INA 219 et final"*

Le capteur INA219 est un capteur de courant et de tension qui permet de mesurer la puissance électrique échangée entre des appareils. Il communique avec l'Arduino via une interface I2C 
et est adapté à la mesure de la puissance dans une chaîne de puissance.


je m'occupe de la partie code du : 


18B20 : Capteurs de température

et de comment obtenir le fonctionnement du système àn p arti d'une certaine tension (3,3 V ? tension de fonctionnement de l'esp) .
ce montage sera composé d'une diode zener , un comparateur et un abaisseur de tension ).


Je veux tester l'iDE arduino que j'ai télécharger. Le televersement ne fonctionne pas. Mon ordi ne reconnait pas la carte. 
J'ai désinstaller et retélécharger l'ide. Telecharger d'autres drivers mais cela ne fonctionne pas. 


Difficultés rencontrées


Téléversement du code sur l’ESP32 :

Problème avec l'installation des pilotes.
Vérifier si la carte ESP32 est bien sélectionnée dans l’IDE Arduino et si les paramètres de port série sont corrects.
Utiliser un code basique pour tester la communication avec la carte.

25/11


Objectif du jour :

Résoudre le problème de téléversement sur l’ESP32.
Tester et coder la gestion des capteurs DS18B20 pour lire la température.


Je m'informe sur le capteur : 


On peut mettre plusieurs capteurs en série : 


Chaque capteur de température DS18B20 possède un code série 64 bits unique. Cela vous permet de câbler plusieurs capteurs au même câble de données.
Ainsi, vous pouvez obtenir la température de plusieurs capteurs en utilisant une seule broche numérique Arduino.


source : 
https://www.raspberryme.com/guide-du-capteur-de-temperature-ds18b20-avec-arduino/


COmment brancher l'esp32 au capteur de température ? 

Le capteur de temlpéarature à 2 pins

A quoi les brancher ? 


---- changement d'objectif du jour --> il faut commencer la fabrication du PCB donc il faut trouver commetn relier le panneau solaire  à l'esp32 . 

comment alimenter l'esp32 avec l'enregie du panneau solaire ? 


 en Parlant avec Simon : 


Schéma fonctionnel


Entrée : Le panneau solaire fournit une tension variable (par exemple, entre 12V et 18V).
Diode Zener et comparateur : Vérifient si la tension est suffisante pour alimenter le système.
Abaisseur de tension (buck converter) : Régule la tension à 3.3V pour alimenter l’ESP32.


Commment choisir les composants ? 




DIODE ZENER 
CHoix de la tension de la diode zener 6,8 V: on reagrde sur le diagramme P_Panneau_Solaire à partir de quelle tension le panneau solaire fonctionne à "pleine puissance". 

On observe que peut importe l'éclairage, le panneau commence à fonctionner autour de 10V. On doit choisir une tesnion en fonction de : 


on choisit une tension parmi les tensions standards des diodes : Diode zener valeurs standards . 

on détermine la valeur des composants entre le panneau solaire et l'esp32. 

Je me demandais pourquoi on choisissait 6,8 V alors qu'il y a des valeurs standards des diodes zener plus proche de 10v. 
Sauf que R2 va faire chuter la tension donc si on choissit une Zner avec une tension > 6,8 V , il est possible que le sytème ne 
sa'ctive pas à partir de 10v reçu dans le panneau solaire. La résistance aura fait chuter la tension de 10V. 

R2 : on fait une KVL pour détérminer la valeur de la résistance qui se situe entre la panneau solaire et la diode Zener . 

KVL : panneau solaire equivalent à la generateur de tension avec 10V< tension <24V. + Ur2 (tension au borne de R2) + diode zener 
parfaite equivalent generateur de tension de 6,8 V. 


R2 = (tension max du panneau solaire - tension de la zener ) / cournant de R2. 

pour déterminer cournat de R2 IR2 : 

on doit avoir IR2 compris entre le cournat minimum de la zener et courant maximum  de la zener. Ces courants peuvent être trouvés dans
la doc de la zener. 

Mais où parmis cette intervalle le Ir2 doit être ? 

déja à quoi correspondent les bornes ? 


Izener min = courant minimal pour que la diode Zener fonctionne correctement en mode Zener , si Ir2 trop proche de Izener min la diode ne maintiendra pas la tension de claquage et la régulation échouera.
Izener max = courant maximal que la diode Zener peut supporter sans surchauffe ou destruction.

il faut que pour la tension max du panneau solaire (26 V), le courant dans la diode (= Ir2 = IdiodeZ) doit être  inferieur à Izener max, sinon la diode claque.
il faut que pour la tension min de panneau solaire (10v), le cournat dans la diodde doit être superieur à Izener min, sinon la diode ne fonctionne pas. 

Il faut que Ir2 soit le plus proche possible de Izmin afin de ne pas faire chauffer la diode et ne pas l'user prématuremment. 

à partir de la doc de la znzer et des valeurs Izener min et Izener max on fait l'application numérique pour R2 :

J'ai du mal à lire la doc : je ne trouve pas de Iz min et Izmax à proprment parler. Il y a  Zerner Voltage Range mais il n' y a qu'une valeur de I
, il y a Maximum Zener Impedance et il y a Maximum Reverse Current mais je n

on lit dans la doc Izener min = 2mA. On voit sur le ghraphique que la zone du coude se termine à 2mA. 
voir shémas graphique détermination Izmin. 

Pour être sur d'avoir passer la zone du coude et parce que la fabrication des composants est variable on prends Ir2 = 5mA. 

Determination de R2 pour Vps max/min avec Ir2 = 5ma :


Pour U panneau solaire = min = 10v et pour Ir2 = 5ma on a R2 = (10-6,8)/5*10^3 donc R2 = 640 omh. N'existe pas . 


POur la tension max dans le panneau ,quelle courant on aurait avce R2 = 640 ohm ? est ce qu'il serait < à Iz max ? 

Iz pour u max panneau solaire = (26-6,8)/640= 0,03 A --> 30 mA<Iz max OK. 

820 ohm --> 24 mA à 26 V ; ne dépasse pas Izmax/2 pour la puissance max dissipée, on chosit cette valeur car elle existe dans les valeurs standards des 
résistance et quelle est précautiuonneuse (loin du max). 


pour Izamx on lit dans la doc que la puissance max dissipée = 350 mW donc on fait 350/6,8 = 50 mA. 
donc IzMax = 50mA. 

voir "Schémas alimentation de l'esp32 au panneau solaire"



COMPARATEUR DE PHASE 

Le comparateur active l'abaisseur de tension Si la tension du panneau est supérieure au seuil. 


26/11

Objectif d'aujourd'hui : 

Finir le dimensionnementet choix des composants ( resistances du pdt, AOP et sa résitance, et regulateur de tension)

j'ai récupéré la resistance grâce à "valeur  R2". 

Résistances du PDT : 

V- de l'AOP est fixé à Vdiode zener = 6,8v. 
Lorsque V+ > Vdiode zener on a Vsortie AOP = + Vcc

On fixe une des deux résistances du PDT : 

on veut 6,8 v au borne de R4 avec Vpanneausolaire = 10v pour que au minmium on est bien la sortie de l'AOP qui alimente 
le regulateur ( puis le reste de circuit ).


je fais le schémas du R2 + PDV + diode + resistance de la Diode 

je n'arrive pas à connEceter le fils sur les noeuds; il y a des noeuds fixés sur les fils il faut relier les composants sur ses noeuds.

M. Peter m' a fait changer un AOP pour un comparateur. 

La simulation Lush fonctionne : je fixe R4 à 1000 ohm. Tandis que je fais varier R3 pour finir par avoir 6,8 aux bornes de R4. 
 donc R3 = 470 ohm et R4 = 1000 ohm.
voir Détrermination R3 et R4 sans valeurs standards des résistances.png

on remet un AOP car on se sait pas comment fonctionne le comparateur. 

On ajoute dans la simulation un condensateur (+ resistance sinon la simulation ne fonctionne pas)  qui fonctionnera avec le panneau solaire. 

On multiplie par 10 la valeur des resistances R3 et R4 du PDT afin de reduire la conso d'energie.

resultat de simulation avce R3 = 4700 ohm et R4 = 10000 ohm

On rajoute une résiatnce en V+ et la sortie --> à quoi cela peut servir ? 


Prochaine fois : 
rajouter une resistance en sortie de l'AOP et et trouver les mpn de l'AOP et du regulateur 

09/12

Le MPN de l'AOP a été donné par le prof. AP331A.



Resistance AOP 

La resistance de l'AOP permet de neutraliser la chute de tension engendrée par la fermeture de l'interrupteur 
lors de la bascule de 0 à V+. 


La target est d'avoir la resistance la plus petite possible. Cependant  il faut diminuer la valeur de la resistance
jusqu'à la limite de bascule de l'AOP. 

on cherche à avoir la plus petite valeur de R AOP afin d'avoir le delta de tension plus élevée que la chute de tension.

voir SImulation pour détermination de RAOP. 

On utilise le principe du trigger de Shmitt, voir "Target de Shmitt".

La "Target de Schmitt" consiste à optimiser les seuils d'hystérésis et la résistance AOP pour que :

La bascule soit stable et fiable.
Le delta de tension soit suffisamment grand pour compenser les chutes de tension induites par les charges connectées.

Essai de differentes valeurs pour R AOP :

1 K pas de bascule 
10 K pas de bascule
11 K pas de bascule
12 K pas de bascule
13 K bascule
15 K bascule


La bascule se fait à partir de 13K mais la valeur normalisée la plus proche et au dessus de 13k et 15K.

R AOP = 15k ohm.



Quel regulateur de tension doit être utilisé ? 

est ce que le MPN est imposé ? Simon a déjà trouvé 


------------------PARTIE PROGRAMMATION----------------


Place à la deuxième partie de mon travail : repondre au besoin de lecture de température à l'aide du BUS des capteurs. 

ESP32           DS18B20 (x5)
------          -----------
3.3V   ------>  VDD (tous en parallèle)
GND    ------>  GND (tous en parallèle)
GPIO4  ------>  DATA (tous en parallèle)
          4.7 kΩ entre DATA et 3.3V resitance de pull-up.

Les capteurs DS18B20, comme d'autres dispositifs utilisant le protocole OneWire, partagent une seule ligne de données pour communiquer. Cette ligne est utilisée pour transmettre des données entre les capteurs et le microcontrôleur (dans ce cas, l'ESP32).

Comportement de la ligne de données :
Lorsque le capteur ou le microcontrôleur ne communique pas, la ligne doit être maintenue à un niveau haut (logique "1").
Lorsque le capteur envoie des données, il abaisse volontairement la ligne de données à un niveau bas (logique "0") pendant un court instant.
Problème sans pull-up :
Si la ligne de données n'est pas maintenue à un niveau haut lorsque le capteur n'est pas actif, la ligne pourrait "flotter", c'est-à-dire qu'elle pourrait prendre une valeur indéterminée, ce qui entraîne des comportements erratiques ou des erreurs de communication.
Fonction de la résistance pull-up :
La résistance pull-up relie la ligne de données à l'alimentation (généralement 3.3V ou 5V), assurant ainsi que la ligne soit au niveau haut (logique "1") lorsqu'aucun capteur n'envoie de signal.
Comment ça fonctionne dans le cas du DS18B20 ?
Lorsque le DS18B20 n'envoie pas de données, il laisse la ligne à haut (logique "1"), ce qui est rendu possible grâce à la résistance pull-up.
Lorsque le DS18B20 veut envoyer un bit à 0, il tire la ligne de données vers le bas (logique "0").
Lorsque le DS18B20 veut envoyer un bit à 1, il laisse la ligne de données à haut, et la résistance pull-up assure que la ligne reste dans cet état.
Valeur typique de la résistance pull-up :
La valeur standard pour cette résistance est souvent 4.7 kΩ, bien que des valeurs comme 10 kΩ puissent également fonctionner dans certains cas.

Les bibliothèques à utiliser sont les : 


Pour connecter 5 capteurs de température DS18B20 à un ESP32 et enregistrer leurs températures avant de les transmettre, voici les étapes détaillées :

Matériel nécessaire
1 x ESP32.
5 x DS18B20.
1 x résistance de 4.7 kΩ (pull-up).
Breadboard et câbles de connexion.
Câblage
Les DS18B20 fonctionnent sur le principe d'une liaison en bus unique (OneWire), ce qui signifie que tous les capteurs partagent la même ligne de données. Voici comment les connecter :

Étapes :
Alimentation :

Relie les broches VDD de tous les DS18B20 à la broche 3.3V de l’ESP32.
Relie toutes les broches GND des DS18B20 au GND de l’ESP32.
Ligne de données :

Relie toutes les broches DATA des DS18B20 ensemble.
Connecte cette ligne DATA à une broche GPIO de l’ESP32 (par exemple, GPIO4).
Résistance pull-up :

Place une résistance de 4.7 kΩ entre la ligne DATA et 3.3V.
Schéma de câblage
plaintext
Copier le code
ESP32           DS18B20 (x5)
------          -----------
3.3V   ------>  VDD (tous en parallèle)
GND    ------>  GND (tous en parallèle)
GPIO4  ------>  DATA (tous en parallèle)
          4.7 kΩ entre DATA et 3.3V
Programmation
L'ESP32 devra gérer plusieurs capteurs sur une même ligne OneWire. Chaque capteur possède une adresse unique (ROM) qui permet de les identifier individuellement.

Bibliothèques nécessaires :
OneWire.
DallasTemperature.

je fais des test avec la plaquette ,  2 capteurs, la resistance de pull-up et l'esp32. 

L'ordinateur sert d'alimentation avec l'usb. 

je n'arrive pas à televrerser dans la carte. je colle les codes erreurs dans chat GPT pour essayer de debugger. 

voir image "Montage téléversement"

Prochaine séance : arriver à téleverser le programme


07/01 


Bonne année !! 

TO do du jour : 

- Téleverser le programme
#include <OneWire.h>
#include <DallasTemperature.h>

// Configuration des broches
#define ONE_WIRE_BUS 4 // GPIO4 pour DATA

// Initialisation du bus OneWire
OneWire oneWire(ONE_WIRE_BUS);

// Initialisation de la bibliothèque DallasTemperature
DallasTemperature sensors(&oneWire);

void setup() {
  Serial.begin(115200);
  sensors.begin();

  Serial.println("Recherche de capteurs...");
  int numberOfDevices = sensors.getDeviceCount();
  Serial.print("Nombre de capteurs détectés : ");
  Serial.println(numberOfDevices);

  if (numberOfDevices == 0) {
    Serial.println("Aucun capteur détecté. Vérifiez le câblage.");
  }
}

void loop() {
  sensors.requestTemperatures(); // Demande des températures à tous les capteurs
  Serial.print("Température capteur 1 : ");
  Serial.println(sensors.getTempCByIndex(0)); // Lecture du premier capteur
  Serial.print("Température capteur 2 : ");
  Serial.println(sensors.getTempCByIndex(1)); // Lecture du deuxième capteur

  delay(1000); // Pause d'une seconde entre les lectures
}
Parameterage de l ide

Ouvrez l'IDE Arduino.

Allez dans Fichier → Préférences.

Dans le champ URL de gestionnaire de cartes supplémentaires, ajoutez l'URL suivante :

bash
Copier le code
https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
Astuce : Si une URL est déjà présente, séparez-les par une virgule.

Ensuite, allez dans Outils → Gestionnaire de cartes.

Recherchez "ESP32" et installez le package officiel de Espressif Systems.

2. Choisir la bonne carte
Pour votre carte spécifique "WiFi LoRa 32 (V3)" :

Allez dans Outils → Type de carte → ESP32 Arduino.
Recherchez et sélectionnez la carte "ESP32 Dev Module".
--> ne fonctionne pas 


modif : 

 Outils → Type de carte
ESP32S3 Dev Module


Téléversement réussi : Les étapes de compression, d'écriture, et de vérification des données se sont déroulées sans erreur.
Chip détecté : ESP32-S3 (QFN56) avec 8MB de flash intégré.
Baud rate : La communication a utilisé un débit efficace de 921600 baud.
Hard resetting via RTS pin : Le microcontrôleur a redémarré automatiquement après le téléversement.


Je veux maintenant tester le programme :


Je configure le moniteur Série. 


J'ai maintenant ce message :


Température capteur 2 : -127.00
Température capteur 1 : -127.00



Le message indiquant Température capteur 1 : -127.00 signifie que le microcontrôleur (ESP32) n'arrive pas à lire correctement les capteurs DS18B20.


1 . j'ai vérifié les branchement en re regardant les pins map de l'esp32 et du capteur : 
Le GPIO n'était pas le bon #define ONE_WIRE_BUS 7 // GPIO7 pour DATA j'ai changé le "4" pour "7" car le câblage étaot sur le 7 !!! 

Cela ne fonctionne toujours pas , puis après enfoncage des composants/câble cela fonctionne ! 


Le capteur 1 détécte 19 degrès tandis que le 2 - 127 car il n'est toujours pas branché. 


Mon thermomètre affiche quant à lui il affiche 16 degrès. 

La mesure est surement faussée car les capteurs ont été manipulés. 

Il faut donc prendre en compte cela : les prises de températures sont sensibles aux manipulations. 

J'attends de voir si la mesure tend à la valeur de celle du thermomêtre. 

Cela met en avant l'importance de la métrologie et de la tolérance des appareils : un degrès de trop pourrait tuer les abeilles. 

Par principe de sureté je conseille de mettre un sueil max qui est d'au moins un degrès de moins que la température max supportée par l'essaim. 

j'aiDE Laura a téste son code car il "ne focntionne pas sur son ordinateur". 

il faut câbler l'ina aux montage déjà existant  :


je suis la doc pour la câblage : 


j'utilise une led pour mesurer la tension et le cournant. 


25/02/2025 -

Besoin de faire un point avec l'equipe 

Fait : 
routage PCB
commande du PCB --> arrivé  27/02

définition des composants 
code capteur de température 
code complet lecture temperature - lecture courant tension 
Schemas electronique 

Reste à faire : 

verifier commande des composants OK
finaliser code complet lecture temperature - lecture courant tension 
appro. huile 
vérification code  lecture courant/tension --> adaptation  mppt avec methode PWM
Montage des composants 
définir un plan de test PCBA 

après verifi PCBA : 
definir contenant huile OK 
essayer sur la ruche 

idées : 

export de données pour exploitation 

trou dans la raquette :

workshop mppt : essai plusieurs puissances source de lumière , rester au point 


28/02/2025

objectif du jour :
comprendre les notions mppt et Mpp

article 3 : https://www.ti.com/lit/an/slyt478/slyt478.pdf?ts=1728361811934

Une caractéristique des panneaux solaires est que leur tension de sortie diminue à mesure que le courant prélevé augmente. 


Méthode des 2 points : pour fonctionner à 90 % du MPP consiste à activer la charge au Point 1 et la désactiver au Point 2
Lorsque la charge est activée, elle consomme de la puissance, ce qui fait baisser la tension du panneau. Cela déplace le point de fonctionnement du Point 1, en passant par le MPP, jusqu’au Point 2. À ce point, la charge est désactivée, ce qui permet à la tension du panneau de remonter.*

défis de la méthode des 2 points : 

- Adaptation de la tension : la charge (ici les résistances chauffantes) et le panneau solaire ne sont pas égales. ==> besoin de  convertir la tension
-  Gestion des variations rapide la tension du panneau 
- Ajouter un superviseur de tension d’alimentation pour activer ou de désactiver l’alimentation électrique en fonction de la tension du panneau solaire 



interruption : j'aide Laura a téste son code. je debug 






10/03/25

A faire aujourd'hui : 

- Assembler les PCBAs
- définir une spec de test 
- COnclure l'inclusion du MPPT PWM dans la programmation 


Je reviens sur la méthode des 2 points : 

pour mettre en place cette méthode on a besoin du TPS62125 un régulateur de tension cependat nous avons utiliser le 

est ce que le regulateur que l'on a choisit a les mêmes caractéristiques que celui proposé dans l'article ? 
Comment trouver les 2 points ? 

On doit déterminer une formule dynamique qui calcule P1 et P2. P& et P2 doivent être détermioner de manière dynamique puisque 
l'ensoleillment varie. 

Est ce qu'on a mis les composnats autour ? 

Alors notre configuration est très différente que celle dans l'article. 
On doit déterminer à partir du bloc de l'INA 219 les formule P1 et P2. 

Quels sont les paramètres de P1 et P2 ? 




Sérigraphie du PCB : on étale la pâte à braser sur le pochoir fixé à l'aide de pince sur le PCB. 

voir image sérigraphie




Changement de technique pour rester au pwm :


faire varier le trapport de cycle en fonction de la variation de la tension/courant


Sérigraphie + montage d'un autre PCB : erreur rencontrée --> lavage du PCB à l'alcool on refait le lendemain. 


11/03/25

Prévue aujourd'hui : 

- Code avec la nouvelle méthode pour garder le pwn 
-Assemblage de le seconde carte 


Principe de la modulation de rapport de cycle : 

La tension varie en fonction de l'ensoleillement et des conditions de fonctionnement du panneau solaire. Si la tension augmente, cela signifie qu'il y a plus de puissance disponible, et vice versa. 
En ajustant le rapport cyclique du PWM en fonction de la tension mesurée, vous pouvez réguler la quantité d'énergie transmise à la résistance chauffante

1. Mesurer la tension et le courant du panneau solaire avec l’INA219. --> code existant 


2 . Calculer la puissance disponible + Ajustement du rapport cyclique du PWM en fonction de cette puissance.
Si beaucoup de puissance est disponible, on augmente le PWM.
Si la puissance diminue, on réduit le PWM pour ne pas surcharger le panneau.


-----------erreur de montage sur la première carte on change R1 montée 4,7k omh avec un 470 omh---------------------

J'utilise chatGPT pour le developpement du code 2.

#include <Wire.h>
#include <Adafruit_INA219.h>

Adafruit_INA219 ina219;

const int pwmPin = 5;      // Broche de sortie du PWM (à connecter à la résistance chauffante)
const int pwmChannel = 0;  // Canal PWM utilisé par l'ESP32
const int pwmFreq = 1000;  // Fréquence PWM (1 kHz)
const int pwmResolution = 8; // Résolution en bits (0-255)

void setup() {
    Serial.begin(115200);
    Wire.begin(); // Initialisation du bus I2C

    // Vérifier que l'INA219 fonctionne
    if (!ina219.begin()) {
        Serial.println("Échec de la connexion à l'INA219 !");
        while (1);
    }
    
    Serial.println("INA219 initialisé !");
    
    // Initialisation du PWM
    ledcSetup(pwmChannel, pwmFreq, pwmResolution);
    ledcAttachPin(pwmPin, pwmChannel);
}

void loop() {
    // Lire la tension et le courant du panneau solaire
    float tension = ina219.getBusVoltage_V();
    float courant = ina219.getCurrent_mA() / 1000.0; // Convertir en A
    float puissance = tension * courant; // Calcul de la puissance (P = U × I)

    // Définir la valeur du PWM en fonction de la puissance disponible
    int pwmValue = map(puissance, 0, 10, 0, 255); // Adapter selon la plage de puissance réelle

    // Limiter la valeur du PWM entre 0 et 255
    pwmValue = constrain(pwmValue, 0, 255);

    // Appliquer le PWM à la résistance chauffante
    ledcWrite(pwmChannel, pwmValue);

    // Afficher les valeurs sur le moniteur série
    Serial.print("Tension : "); Serial.print(tension); Serial.print(" V, ");
    Serial.print("Courant : "); Serial.print(courant, 3); Serial.print(" A, ");
    Serial.print("Puissance : "); Serial.print(puissance); Serial.print(" W, ");
    Serial.print("PWM : "); Serial.println(pwmValue);

    delay(1000); // Attendre 1 seconde avant la prochaine mesure
}


erreure rencontrée : C:\Users\melim\Documents\Etude\POLYTECH\4A\S7\Projet électronique\32\32.ino: In function 'void setup()':
C:\Users\melim\Documents\Etude\POLYTECH\4A\S7\Projet électronique\32\32.ino:10:3: error: 'ledcSetup' was not declared in this scope
C:\Users\melim\Documents\Etude\POLYTECH\4A\S7\Projet électronique\32\32.ino:11:3: error: 'ledcAttachPin' was not declared in this scope; did you mean 'ledcAttach'?

exit status 1

Compilation error: 'ledcSetup' was not declared in this scope


je teste un code simple pour véfier la connxion de mon ESP32 et mon environnement : 
void setup() {
  Serial.begin(115200);  // Initialise la communication série
  delay(1000);  // Pause pour stabiliser
  Serial.println("ESP32 OK");
}

void loop() {
  Serial.println("ESP32 fonctionne !");
  delay(1000);  // Attendre 1 seconde
}


--- en parrallèle on remonte le PCBA + on le met au four --- 

Utilisation du four : cycle à vide + cycle "C3 pour cuire la PCBA


* photo four **
Précaution : chaleur importante et pas de moyen de protection 
On inspecte la carte visuellement => * image inpestion * 
explication installation broche pour téléverser : 

RX	Réception (UART)	Lire des données d’un PC, capteur série
TX	Transmission (UART)	Envoyer des données à un PC, autre microcontrôleur
GND	Masse	Connexion de référence pour tous les composants
RST	Reset	Redémarrer l’ESP32
3.3V	Alimentation	Alimenter des modules (capteurs, écrans, etc.)


-- Brasage manuel des caPteur ==> difficultés rencontrées : ponts entre les pins, peut être du à la taille de la tige. 

24/03 

Ordre du jour : 

1. reprise des composants brasés manuellement 
2. mesures des caractéristiques du panneau solaire à l'aide du réaustat


2.1 Montage théorique 

Materiel nécessaire : 

- Réaustat 
-2 multimêtres 
-panneau solaire 
- fiches bananes 
- Lumière variable 
- Autotransfo 



Determination du schémas : 

voir photo Montage mesure caractéristique panneau solaire .jpg

point de vigilance : comment monter les multimêtres ? 

-> le voltmêtre se branche en parrallèle à la charge : Le voltmètre mesure la différence de potentiel électrique entre deux points d'un circuit.
La tension est la différence de potentiel entre deux points, donc pour mesurer cette différence, il doit être connecté en parallèle aux deux points où la tension est à mesurer.

voir photo choix montage ampèrmetre 
-> L'ampèremêtre : Un ampèremètre doit toujours être connecté en série avec le circuit dont tu veux mesurer le courant, car il doit permettre au courant de passer à travers lui.
On peut soit mettre l'ampèremetre dans le branchment du voltmêtre soit en dehors. 

Cela dépend de l'impédance caractéristique du multimêtre.  le multi peut être numérique ou à aiguille. 
Dans le premier cas : on a Z proche de 1 méga ohm. - photo autotransfo --

Tandis que dans un mécanisme à aiguille on a un bobinage unique avec un curseur qui fait varier le rapport de spear et donc la tension secondaire entre 0 et 230 V. Ce bobinage 
est en série avec une résistance et celle ci à une valeur << à 1 mega ohm. 

On choisira alors de mettre l'ampèremêtre dans la boucle et oon peut négliger ainsi la cournat du voltmèetre. 



2.2 montage pratique 

Voir image montage physique 


Rq = : le panneau solaire chauffe entre chaque mesure il faut le laisser refroidire. Les panneaux solaire perdent en puissance lorsqu'ils chauffent => les panneaux solaires 
sur les toits ne doivent pas être collés au toit des maison mais devraient laisse circuler l'air. 

Les resultas experimentaux suivent les résultats théoriques attendus. 

On a deux varibales à mesurer : la tension et le courant. 
On a 2 variables à faire varier : le réaustat et l'intensité lumineuse avec l'auto transformateur. 
On augmente la prise de point entre 20 et 20 ohm car c'est la que ce trouve le pwm  => rectification c'est entre 1200 et 300



rq : on a pas de valeur pour A = 0 


25/03/25 


Retex 24/03 : prise des mesures pour 3 intensités lumineuses 

ordre du jour : 


1. reprise des composants brasés manuellement 
2. continuer mesures des caractéristiques du panneau solaire à l'aide du réaustat
3.Analyse des mesures 

On re oinstalle le montage 


rq : on est obligé de faire des pauses fréquente car le panneau chauffe 
voir influence de la température sur les mesures .jpg


besoin de faire l'algo 

